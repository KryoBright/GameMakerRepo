<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Caret</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>delay=1
state=0
combo_state=0
combo_init=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((x!=Trey.action_tablets[Trey.active].x)or(y!=Trey.action_tablets[Trey.active].y-ceil(74/Trey.c)))
{
    dst=(abs(x-Trey.action_tablets[Trey.active].x)+abs(y-Trey.action_tablets[Trey.active].y+ceil(74/Trey.c)))/2
    move_towards_point(Trey.action_tablets[Trey.active].x,Trey.action_tablets[Trey.active].y-ceil(74/Trey.c),0.5*dst)
}

if ((keyboard_check(vk_down))and((state==0)or(combo_state!=0)))
{
    state=1
    if ((combo_state==1)and(keyboard_check(vk_right)))
    {
        combo_state++
        delay+=0.5
    }
    else if ((combo_state==2)and(!keyboard_check(vk_right)))
    {
        combo_state++
    }
    else if ((combo_state==1)and(!keyboard_check(vk_right)))
    {
        combo_state=4
        delay+=0.5
    }
    else if ((combo_state==4)and(keyboard_check(vk_right)))
    {
        combo_state++;
    }
}
if ((keyboard_check(vk_up))and(state==0))
{
    state=2
}

if ((keyboard_check(vk_left))and(state==0))
{
    state=3
}
if ((keyboard_check(vk_right))and(state==0))
{
    state=4
    if (combo_state==0)
    {
        combo_state++
        delay+=0.5
    }
}
if (((keyboard_check(ord('S')))or(keyboard_check(ord('s'))))and(state==0))
{
    state=7
}
if (((keyboard_check(ord('Z')))or(keyboard_check(ord('z'))))and(state==0))
{
    state=8
}
if (((keyboard_check(ord('X')))or(keyboard_check(ord('x'))))and(state==0))
{
    state=9
}
if (((keyboard_check(ord('C')))or(keyboard_check(ord('C'))))and(state==0))
{
    state=10
}
if (delay==0)
    {
    if (combo_state==3)
    {
        state=6
        combo_state=0
    }
    if (combo_state==5)
    {
        state=5
        combo_state=0
    }
    Trey.action_tablets[Trey.active].status=state;
    state=0
    delay=1
        if (Trey.active&lt;(Trey.c*6-1))
        {
            Trey.active++;
        }
}
else
    {
    if (state!=0)
    delay-=0.125
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mouse_y&lt;(y+174/Trey.c))
{
    Trey.action_tablets[Trey.active].status++;
}
else {
Trey.action_tablets[Trey.active].status--;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
